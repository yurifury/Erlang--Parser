Conflicts:
----------
Conflict in state 26 between rule 15 and token DIVIDE resolved as reduce.
Conflict in state 26 between rule 15 and token SUBTRACT resolved as reduce.
Conflict in state 26 between rule 15 and token ADD resolved as reduce.
Conflict in state 26 between rule 15 and token MULTIPLY resolved as reduce.
Conflict in state 27 between rule 18 and token DIVIDE resolved as shift.
Conflict in state 27 between rule 18 and token SUBTRACT resolved as reduce.
Conflict in state 27 between rule 18 and token ADD resolved as reduce.
Conflict in state 27 between rule 18 and token MULTIPLY resolved as shift.
Conflict in state 28 between rule 17 and token DIVIDE resolved as shift.
Conflict in state 28 between rule 17 and token SUBTRACT resolved as reduce.
Conflict in state 28 between rule 17 and token ADD resolved as reduce.
Conflict in state 28 between rule 17 and token MULTIPLY resolved as shift.
Conflict in state 29 between rule 16 and token DIVIDE resolved as reduce.
Conflict in state 29 between rule 16 and token SUBTRACT resolved as reduce.
Conflict in state 29 between rule 16 and token ADD resolved as reduce.
Conflict in state 29 between rule 16 and token MULTIPLY resolved as reduce.

Rules:
------
0:	$start -> root $end
1:	root -> /* empty */
2:	root -> root rootstmt
3:	rootstmt -> DIRECTIVE exprlist RPAREN PERIOD
4:	rootstmt -> INTCALL RPAREN RARROW stmtlist PERIOD
5:	stmtlist -> stmt
6:	stmtlist -> stmtlist COMMA stmt
7:	stmt -> expr
8:	exprlist -> /* empty */
9:	exprlist -> expr
10:	exprlist -> exprlist COMMA expr
11:	expr -> ATOM
12:	expr -> INTEGER
13:	expr -> STRING
14:	expr -> list
15:	expr -> expr DIVIDE expr
16:	expr -> expr MULTIPLY expr
17:	expr -> expr ADD expr
18:	expr -> expr SUBTRACT expr
19:	expr -> EXTCALL exprlist RPAREN
20:	expr -> LPAREN expr RPAREN
21:	list -> LISTOPEN exprlist LISTCLOSE

States:
-------
State 0:

	$start -> . root $end	(Rule 0)

	$default	reduce using rule 1 (root)

	root	go to state 1

State 1:

	$start -> root . $end	(Rule 0)
	root -> root . rootstmt	(Rule 2)

	$end	shift, and go to state 2
	DIRECTIVE	shift, and go to state 4
	INTCALL	shift, and go to state 5

	rootstmt	go to state 3

State 2:

	$start -> root $end .	(Rule 0)

	$default	accept

State 3:

	root -> root rootstmt .	(Rule 2)

	$default	reduce using rule 2 (root)

State 4:

	rootstmt -> DIRECTIVE . exprlist RPAREN PERIOD	(Rule 3)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	$default	reduce using rule 8 (exprlist)

	expr	go to state 8
	exprlist	go to state 11
	list	go to state 13

State 5:

	rootstmt -> INTCALL . RPAREN RARROW stmtlist PERIOD	(Rule 4)

	RPAREN	shift, and go to state 15

State 6:

	expr -> INTEGER .	(Rule 12)

	$default	reduce using rule 12 (expr)

State 7:

	expr -> ATOM .	(Rule 11)

	$default	reduce using rule 11 (expr)

State 8:

	exprlist -> expr .	(Rule 9)
	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	ADD	shift, and go to state 18
	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19
	SUBTRACT	shift, and go to state 17

	$default	reduce using rule 9 (exprlist)

State 9:

	expr -> LPAREN . expr RPAREN	(Rule 20)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 20
	list	go to state 13

State 10:

	list -> LISTOPEN . exprlist LISTCLOSE	(Rule 21)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	$default	reduce using rule 8 (exprlist)

	expr	go to state 8
	exprlist	go to state 21
	list	go to state 13

State 11:

	rootstmt -> DIRECTIVE exprlist . RPAREN PERIOD	(Rule 3)
	exprlist -> exprlist . COMMA expr	(Rule 10)

	COMMA	shift, and go to state 23
	RPAREN	shift, and go to state 22

State 12:

	expr -> EXTCALL . exprlist RPAREN	(Rule 19)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	$default	reduce using rule 8 (exprlist)

	expr	go to state 8
	exprlist	go to state 24
	list	go to state 13

State 13:

	expr -> list .	(Rule 14)

	$default	reduce using rule 14 (expr)

State 14:

	expr -> STRING .	(Rule 13)

	$default	reduce using rule 13 (expr)

State 15:

	rootstmt -> INTCALL RPAREN . RARROW stmtlist PERIOD	(Rule 4)

	RARROW	shift, and go to state 25

State 16:

	expr -> expr DIVIDE . expr	(Rule 15)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 26
	list	go to state 13

State 17:

	expr -> expr SUBTRACT . expr	(Rule 18)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 27
	list	go to state 13

State 18:

	expr -> expr ADD . expr	(Rule 17)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 28
	list	go to state 13

State 19:

	expr -> expr MULTIPLY . expr	(Rule 16)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 29
	list	go to state 13

State 20:

	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)
	expr -> LPAREN expr . RPAREN	(Rule 20)

	ADD	shift, and go to state 18
	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19
	RPAREN	shift, and go to state 30
	SUBTRACT	shift, and go to state 17

State 21:

	exprlist -> exprlist . COMMA expr	(Rule 10)
	list -> LISTOPEN exprlist . LISTCLOSE	(Rule 21)

	COMMA	shift, and go to state 23
	LISTCLOSE	shift, and go to state 31

State 22:

	rootstmt -> DIRECTIVE exprlist RPAREN . PERIOD	(Rule 3)

	PERIOD	shift, and go to state 32

State 23:

	exprlist -> exprlist COMMA . expr	(Rule 10)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	expr	go to state 33
	list	go to state 13

State 24:

	exprlist -> exprlist . COMMA expr	(Rule 10)
	expr -> EXTCALL exprlist . RPAREN	(Rule 19)

	COMMA	shift, and go to state 23
	RPAREN	shift, and go to state 34

State 25:

	rootstmt -> INTCALL RPAREN RARROW . stmtlist PERIOD	(Rule 4)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	stmt	go to state 36
	expr	go to state 37
	stmtlist	go to state 35
	list	go to state 13

State 26:

	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr DIVIDE expr .	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	$default	reduce using rule 15 (expr)

State 27:

	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)
	expr -> expr SUBTRACT expr .	(Rule 18)

	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19

	$default	reduce using rule 18 (expr)

State 28:

	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr ADD expr .	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19

	$default	reduce using rule 17 (expr)

State 29:

	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr MULTIPLY expr .	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	$default	reduce using rule 16 (expr)

State 30:

	expr -> LPAREN expr RPAREN .	(Rule 20)

	$default	reduce using rule 20 (expr)

State 31:

	list -> LISTOPEN exprlist LISTCLOSE .	(Rule 21)

	$default	reduce using rule 21 (list)

State 32:

	rootstmt -> DIRECTIVE exprlist RPAREN PERIOD .	(Rule 3)

	$default	reduce using rule 3 (rootstmt)

State 33:

	exprlist -> exprlist COMMA expr .	(Rule 10)
	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	ADD	shift, and go to state 18
	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19
	SUBTRACT	shift, and go to state 17

	$default	reduce using rule 10 (exprlist)

State 34:

	expr -> EXTCALL exprlist RPAREN .	(Rule 19)

	$default	reduce using rule 19 (expr)

State 35:

	rootstmt -> INTCALL RPAREN RARROW stmtlist . PERIOD	(Rule 4)
	stmtlist -> stmtlist . COMMA stmt	(Rule 6)

	COMMA	shift, and go to state 38
	PERIOD	shift, and go to state 39

State 36:

	stmtlist -> stmt .	(Rule 5)

	$default	reduce using rule 5 (stmtlist)

State 37:

	stmt -> expr .	(Rule 7)
	expr -> expr . DIVIDE expr	(Rule 15)
	expr -> expr . MULTIPLY expr	(Rule 16)
	expr -> expr . ADD expr	(Rule 17)
	expr -> expr . SUBTRACT expr	(Rule 18)

	ADD	shift, and go to state 18
	DIVIDE	shift, and go to state 16
	MULTIPLY	shift, and go to state 19
	SUBTRACT	shift, and go to state 17

	$default	reduce using rule 7 (stmt)

State 38:

	stmtlist -> stmtlist COMMA . stmt	(Rule 6)

	ATOM	shift, and go to state 7
	EXTCALL	shift, and go to state 12
	INTEGER	shift, and go to state 6
	LISTOPEN	shift, and go to state 10
	LPAREN	shift, and go to state 9
	STRING	shift, and go to state 14

	stmt	go to state 40
	expr	go to state 37
	list	go to state 13

State 39:

	rootstmt -> INTCALL RPAREN RARROW stmtlist PERIOD .	(Rule 4)

	$default	reduce using rule 4 (rootstmt)

State 40:

	stmtlist -> stmtlist COMMA stmt .	(Rule 6)

	$default	reduce using rule 6 (stmtlist)


Summary:
--------
Number of rules         : 22
Number of terminals     : 18
Number of non-terminals : 8
Number of states        : 41
